openapi: 3.0.3
info:
  title: Django DRF FitGear
  version: 0.0.0
paths:
  /api/cart/:
    get:
      operationId: api_cart_retrieve
      description: "\n        API endpoint for retrieving the user's cart.\n     \
        \   \n        Retrieves the user's cart details.\n        \n        Responses:\n\
        \        \n            - 200 OK: Returns the user's cart details.\n      \
        \  "
      tags:
      - Cart
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/cart/add-to-cart/{id}/{quantity}/:
    post:
      operationId: api_cart_add_to_cart_create
      description: Add a product to the user's cart. Increments the quantity of a
        specified product in the user's cart by the specified quantity.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: quantity
        schema:
          type: integer
        required: true
      tags:
      - Cart
      requestBody:
        content:
          type:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          properties:
            schema:
              product_id:
                type: integer
                description: The ID of the product to add to the cart.
                required: true
              quantity:
                type: integer
                description: The quantity of the product to add. Defaults to 1.
                required: true
                default: 1
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/cart/remove-from-cart/{cart_item_id}/:
    delete:
      operationId: api_cart_remove_from_cart_destroy
      description: "\n            Remove a product from the user's cart.\n\n     \
        \       Deletes the specified product from the user's cart.\n\n          \
        \  Parameters:\n                - `cart_item_id` (int): The ID of the cart\
        \ item to remove.\n\n            Returns:\n                HTTP 204 No Content\
        \ if the product is successfully removed from the cart.\n        "
      parameters:
      - in: path
        name: cart_item_id
        schema:
          type: integer
        required: true
      tags:
      - Cart
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/orders/:
    get:
      operationId: api_orders_list
      description: "\n            Get orders based on user role.\n\n            Returns\
        \ a list of orders based on the user's role.\n\n            Available roles:\n\
        \                - Admin: All orders\n                - User: Orders that\
        \ have been ordered by the current user\n\n            Example response:\n\
        \            [\n                {\n                    \"id\": 1,\n      \
        \              \"customer\": \"John Doe\",\n                    \"status\"\
        : \"Undecided\",\n                    ...\n                },\n          \
        \      ...\n            ]\n        "
      tags:
      - Orders
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
  /api/orders/{id}/:
    get:
      operationId: api_orders_retrieve
      description: "\n            Get an order by ID.\n\n            Returns the details\
        \ of the specified order.\n\n            Parameters:\n                - `pk`\
        \ (int): The ID of the order.\n\n            Example response:\n         \
        \   {\n                \"id\": 1,\n                \"customer\": \"John Doe\"\
        ,\n                \"status\": \"Pending\",\n            }\n        "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Orders
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
  /api/orders/{id}/change-status/:
    post:
      operationId: api_orders_change_status_create
      description: "\n            Change the status of an order.\n            Changes\
        \ the status of the specified order.\n\n            Parameters:\n        \
        \        - `pk` (int): The ID of the order.\n\n            Example response:\n\
        \            {\n                \"detail\": \"Order status updated successfully.\"\
        \n            }\n        "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Orders
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: Completed
              required:
              - status
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/orders/{id}/gen-bill/:
    post:
      operationId: api_orders_gen_bill_create
      description: "\n            Generate a bill for an order.\n\n            Generates\
        \ a bill for the specified order.\n\n            Parameters:\n           \
        \     - `pk` (int): The ID of the order.\n\n            Example response:\n\
        \                \"Payment is created...\"\n        "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Orders
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/orders/{id}/payment/:
    post:
      operationId: api_orders_payment_create
      description: "\n            Pay for an order.\n\n            Processes the payment\
        \ for the specified order.\n\n            Parameters:\n                - `pk`\
        \ (int): The ID of the order.\n\n            Example response:\n         \
        \       \"Payment successful.\"\n        "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Orders
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/products/:
    get:
      operationId: api_products_list
      description: "\n                Get all products.\n                Returns a\
        \ list of all products available in the system.\n            "
      tags:
      - Products
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/:
    get:
      operationId: api_products_retrieve
      description: "\n            Get a product by ID.\n\n            Returns the\
        \ product details for the specified ID.\n\n            Parameters:\n     \
        \           - `pk` (int): The ID of the product.\n\n            Example response:\n\
        \            {\n                \"id\": 1,\n                \"name\": \"Product\
        \ 1\",\n                \"price\": 10.99,\n                ...\n         \
        \   }\n        "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Products
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/order/create/:
    post:
      operationId: api_products_order_create_create
      description: "\n            Create a new order, only User can create one.\n\
        \            Creates a new order for the specified product.\n\n          \
        \  Parameters:\n                - `pk` (int): The ID of the product.\n\n \
        \           Example request body:\n                {\n                   \
        \ \"address\": \"U address\",\n                    \"postal_code\": \"U postal_code\"\
        ,\n                    \"city\": \"U city name\",\n                }\n\n \
        \           Example response:\n                \"New order created successfully!\n\
        \        "
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Products
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                  example: U'r address
                postal_code:
                  type: string
                  example: U'r postal_code
                city:
                  type: string
                  example: U'r city name
              required:
              - status
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/routes/:
    get:
      operationId: api_routes_retrieve
      description: "\n            Get available routes.\n\n            Returns a list\
        \ of available routes in the API.\n\n            Example response:\n     \
        \           [{\"GET\": \"/api/routes/\"}]\n        "
      tags:
      - Routes
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/users/token/:
    post:
      operationId: api_users_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/users/token/refresh/:
    post:
      operationId: api_users_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    Category:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 100
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        customer:
          $ref: '#/components/schemas/User'
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        address:
          type: string
          maxLength: 250
        postal_code:
          type: string
          maxLength: 20
        department_number:
          type: string
          maxLength: 100
        created:
          type: string
          format: date-time
          nullable: true
        updated:
          type: string
          format: date-time
          nullable: true
        file:
          type: string
          format: uri
          nullable: true
        is_paid:
          type: boolean
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        phone:
          type: string
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - created_at
      - customer
      - id
      - order_items
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        order_of_item:
          type: integer
          nullable: true
      required:
      - id
      - product
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
          nullable: true
          maxLength: 150
        image:
          type: string
          format: uri
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        short_description:
          type: string
          nullable: true
          maxLength: 200
        description:
          type: string
        old_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        created:
          type: string
          format: date-time
          nullable: true
      required:
      - category
      - description
      - id
    StatusEnum:
      enum:
      - Undecided
      - Paid
      - Completed
      type: string
      description: |-
        * `Undecided` - UNDECIDED
        * `Paid` - PAID
        * `Completed` - COMPLETED
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - id
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
